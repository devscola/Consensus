diff --git a/public/discussion-board.html b/public/discussion-board.html
index ae21861..90b1533 100644
--- a/public/discussion-board.html
+++ b/public/discussion-board.html
@@ -19,7 +19,7 @@
             </div>
             <div class="col-sm-offset-1 col-sm-10">
                 <question-button id="questioner" buttonVisibility="false"></question-button>
-                <question-form id="question-content"></question-form>
+                <question-form id="question-content" activated="true"></question-form>
             </div>
         </div>
 
@@ -35,7 +35,6 @@
         <script src="/js/components/discussion-board/questioner.js"></script>
         <script src="/js/components/discussion-board/title.js"></script>
         <script src="/js/components/discussion-board/content.js"></script>
-        <script src="/js/components/discussion-board/question-content.js"></script>
         <script src="/js/components/discussion-board/circle.js"></script>
 
         <script src="/js/pages/discussionBoard.js"></script>
diff --git a/public/js/components/discussion-board/question-content.js b/public/js/components/discussion-board/question-content.js
index fa085c2..7f666d5 100644
--- a/public/js/components/discussion-board/question-content.js
+++ b/public/js/components/discussion-board/question-content.js
@@ -6,11 +6,16 @@ Class('DiscussionBoard.QuestionContent', {
         DiscussionBoard.QuestionContent.Super.call(this, 'question-content');
     },
 
+    disableQuestionForm: function() {
+        this.element.textboxVisibility = false;
+    },
+
     _showTextarea: function() {
         this.element.textboxVisibility = true;
     },
 
     subscribe: function() {
+        Bus.subscribe('proposal.question.added', this.disableQuestionForm.bind(this));       
         Bus.subscribe('discussion-board.show-textarea', this._showTextarea.bind(this));
     }
 
diff --git a/public/js/components/discussion-board/questioner.js b/public/js/components/discussion-board/questioner.js
index 18aa05e..d02e8d9 100644
--- a/public/js/components/discussion-board/questioner.js
+++ b/public/js/components/discussion-board/questioner.js
@@ -26,11 +26,6 @@ Class('DiscussionBoard.Questioner', {
         this.element.buttonVisibility = true;
     },
 
-    formSubmitEvent: function(){
-        var submit = document.getElementById('question-submit');
-        submit.addEventListener('click', this.addQuestion.bind(this)); 
-    },
-
     addQuestion: function() {
         var questionData = {};
         var body = document.getElementById('questionText');
@@ -49,12 +44,12 @@ Class('DiscussionBoard.Questioner', {
     },
 
     enableQuestionButton: function(result) {
-        console.log(result);
+        this.element.enabledQuestion = false;
     },
 
     _showTextarea: function() {
-        Bus.publish('discussion-board.show-textarea');
-        this.formSubmitEvent();
+        var questionForm = document.getElementById('questionContent');
+        questionForm.setAttribute('activated', true);
     },
 
     subscribe: function() {
diff --git a/public/js/pages/discussionBoard.js b/public/js/pages/discussionBoard.js
index c1ed6b9..62d61d2 100644
--- a/public/js/pages/discussionBoard.js
+++ b/public/js/pages/discussionBoard.js
@@ -3,7 +3,7 @@ Class('Page.DiscussionBoard', {
     Extends: Page,
 
     initialize: function() {
-        instances = [DiscussionBoard.Title, DiscussionBoard.Content, DiscussionBoard.Circle, DiscussionBoard.QuestionContent, Services.Proposals, Services.DiscussionBoard];
+        instances = [DiscussionBoard.Title, DiscussionBoard.Content, DiscussionBoard.Circle, Services.Proposals, Services.DiscussionBoard];
         Page.DiscussionBoard.Super.call(this, instances);
 
         new DiscussionBoard.Questioner(this.retrieveId());
diff --git a/public/js/services/discussion-board.js b/public/js/services/discussion-board.js
index c449525..a4ec610 100644
--- a/public/js/services/discussion-board.js
+++ b/public/js/services/discussion-board.js
@@ -8,7 +8,6 @@ Class('Services.DiscussionBoard', {
 
     addQuestion: function(questionData) {
         this.doRequest(this.baseUrl + '/add/question', questionData, function(result) {
-            console.log('hola');
             Bus.publish('proposal.question.added', result);
         });
     },
diff --git a/public/web_components/question-button.html b/public/web_components/question-button.html
index 685173a..20239ec 100644
--- a/public/web_components/question-button.html
+++ b/public/web_components/question-button.html
@@ -38,14 +38,14 @@
                     value: 'hide'
                 }
             },
-
-            _renderButton: function() {
-                this.visibility = 'show';
-            },
-
+            
             openTextarea: function(e, detail) {
                 this.fire('openTextarea');
                 this.enabledQuestion = true;
+            },
+
+            _renderButton: function() {
+                this.visibility = 'show';
             }
 
         });
diff --git a/public/web_components/question-form.html b/public/web_components/question-form.html
index 95e1e5a..8dc20c2 100644
--- a/public/web_components/question-form.html
+++ b/public/web_components/question-form.html
@@ -3,23 +3,17 @@
 <dom-module id="question-form">
     <template>
         <style>
-            #questionContent.show {
+            .show {
                 display: block;
             }
 
-            #questionContent.hide {
-                display: none;
-            }
-            #submit.show {
-                display: block;
-            }
-
-            #submit.hide {
+            .hide {
                 display: none;
             }
+            
         </style>
 
-        <div id="questionContent" class$="{{visibility}}">
+        <div id="questionContent" class$="{{displayed}}" activated="[[active]]">
             <input id="questionText" type="textarea" name="question-text" value="{{theQuestion::input}}" on-input="_count"></input>
             <span class="badge">{{count}}</span>
             <button id="question-submit" on-click="questionAttempt"disabled$="{{enabledSubmit}}">submit</button>
@@ -39,14 +33,16 @@
                     reflectToAttribute: true
                 },
 
-                textboxVisibility: {
+                displayed: {
+                    type: String,
+                    value: 'hide',
+                    reflectToAttribute: true
+                },
+          
+                active: {
                     type: Boolean,
                     reflectToAttribute: true,
-                    observer: '_render'
-                },
-                visibility: {
-                    type: String,
-                    value: 'hide'
+                    observer: 'evaluateDisplay'
                 },
 
                 theQuestion:{
@@ -59,11 +55,20 @@
                     value: 0
                 }
             },
-
+            
             questionAttempt: function(e, detail) {
                 this.fire('questionSubmit');
             },
 
+            evaluateDisplay: function(){
+                console.log(this.active);
+                this.displayed = 'hide';
+                if (this.active) {
+                    this.displayed = 'show';     
+                }
+
+            },
+
             _count: function() {
                 this.count=this.theQuestion.length;
                 this._activateSubmit();
@@ -72,13 +77,9 @@
             _activateSubmit: function() {
                 if (this.count >= 100){
                     this.enabledSubmit = null;
-                }else{
+                } else {
                     this.enabledSubmit = 'true';
                 }
-            },
-
-            _render: function() {
-                this.visibility = 'show';
             }
 
         });
diff --git a/spec/bdd/discussion_board_spec.rb b/spec/bdd/discussion_board_spec.rb
index c0ca6a3..6e18dac 100644
--- a/spec/bdd/discussion_board_spec.rb
+++ b/spec/bdd/discussion_board_spec.rb
@@ -79,7 +79,7 @@ feature 'Discussion board' do
     expect(board.submit_question_active?).to be false
   end
 
-  scenario 'Shows textarea when question button is clicked', :wip do
+  scenario 'Shows textarea when question button is clicked' do
     board = new_proposal_with_Arya_involved
 
     board.create_question
@@ -88,7 +88,7 @@ feature 'Discussion board' do
     expect(board.question_content?).to be true
   end
 
-  scenario 'Question button enabled when proposal is submited', :wip do
+  scenario 'Question button enabled when proposal is submited' do
     board = new_proposal_with_Arya_involved
 
     board.create_question
@@ -98,7 +98,14 @@ feature 'Discussion board' do
     expect(board.question_button_active?).to be true
   end
 
-  xscenario 'Question form disabled when proposal is submited' do
+  scenario 'Question form disabled when proposal is submited' do
+    board = new_proposal_with_Arya_involved
+
+    board.create_question
+    board.fill_question(enough_text)
+    board.submit_question_form
+
+    expect(board.question_form?).to be false
   end
 
 
diff --git a/spec/bdd/test_support/discussion_board.rb b/spec/bdd/test_support/discussion_board.rb
index 7ae71b1..f817dc6 100644
--- a/spec/bdd/test_support/discussion_board.rb
+++ b/spec/bdd/test_support/discussion_board.rb
@@ -24,7 +24,6 @@ module Page
     end
 
     def question_button?
-      sleep(1)
       has_css?('#question')
     end
 
@@ -36,6 +35,10 @@ module Page
       has_css?('#questionContent')
     end
 
+    def question_form?
+      has_css?('#questionText')
+    end
+
     def question_button_active?
       button = find('#question')
       result = button[:disabled]
